@model HRM.Core.Model.VMUserModel
@{
    ViewBag.Title = "HRMS - Assigned Shifts List";
    WebGrid grid = new WebGrid(Model.UserList, canSort: true, canPage: false, rowsPerPage: 10);
}
<div class="page-box content-box mrg25B">
    <h3 class="content-box-header bg-blue text-left mrg25B screenheading"><i class="glyph-icon icon-table"></i>Assigned Shifts List</h3>
    @using (Html.BeginForm("AssignList", "Shift", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "AssignListForm", @class = "form-horizontal customclass" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        
        <div class="form-group">
            <label for="UserShiftId" class="col-sm-4 control-label lblforinput">Shift: </label>
            <div class="col-sm-6">
                @Html.DropDownListFor(m => m.ShiftId, ViewBag.Shift as SelectList, "All Shift", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label for="DepartmentID" class="col-sm-4 control-label lblforinput">Department: </label>
            <div class="col-sm-6">
                @Html.DropDownListFor(m => m.DepartmentID, ViewBag.Department as SelectList, "All Department", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label for="UserName" class="col-sm-4 control-label lblforinput">User Name</label>
            <div class="col-sm-6">
                @Html.TextBoxFor(m => m.UserName, new { maxlength = "200", @class = "form-control", placeholder = "User Name" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-5"></div>
            <div class="col-sm-2">
                <button type="submit" class="btn btn-block btn-success">Search</button>
            </div>
            <div class="col-sm-5"></div>
        </div>
    }

    @if (Model.UserList != null && Model.UserList.Count > 0)
    {
        @grid.GetHtml(htmlAttributes: new { id = "gridtbl" },
        tableStyle: "table table-striped table-hover datatable",
        headerStyle: "header",
        alternatingRowStyle: "alternating-row",
        rowStyle: "row-style",
        columns:
            grid.Columns(
                grid.Column("SNo", format: item => item.WebGrid.Rows.IndexOf(item) + 1),
                grid.Column("ID", "Emp ID"),
                grid.Column("FirstName", "Name", format: @<text><img width="36" src="@(item.ImagePath == "" ? "/assets/images/anonymoususer.jpg": item.ImagePath)" onerror="$(this).attr('src','/assets/images/anonymoususer.jpg')" style="height: 40px; vertical-align: middle;" alt="">&nbsp;<a title="Click here to Assign Shift to User" href="/Shift/Assign?id=@item.Id">@item.FirstName</a><input type="hidden" class="hdnUserId" value="@item.id" /></text>),
                grid.Column("Department.Name", header: "Department", format: (item) => item.Department != null ? item.Department.Name : Html.Raw("N/A")),
                grid.Column("Shift", header: "Shift", format: @<text><a target="_blank" title="Click here to View User Shifts History" href="/Shift/AssignHistory?id=@item.Id">@(item.Shift != null ? item.Shift.Name : Html.Raw("N/A"))</a></text>),
                grid.Column("UserContactEmail.Detail", header: "Email Address", format: (item) => (item.UserContactEmail.Detail != null && item.UserContactEmail.Detail != "") ? item.UserContactEmail.Detail : Html.Raw("N/A")),
                grid.Column("UserContactMobile.Detail", header: "Mobile Number", format: (item) => (item.UserContactMobile.Detail != null && item.UserContactMobile.Detail != "") ? item.UserContactMobile.Detail : Html.Raw("N/A")),
                grid.Column("Designation", header: "Designation", format: (item) => (item.Designation != null && item.Designation != "") ? item.Designation : Html.Raw("N/A"))
                )
        )
    }

</div>
<script>
    var links = $('a[href*=page], a[href*=sort]'), form = $('form');
    links.click(function () {
        form.attr("action", this.href);
        $(this).attr("href", "javascript:");
        form.submit();
    });

    $(document).ready(function () {
        $("option[value='-1']").remove();
    });

    $("#UserName").blur(function () {
        var keyEvent = $.Event("keydown");
        keyEvent.keyCode = $.ui.keyCode.ENTER;
        $(this).trigger(keyEvent);
    }).autocomplete({
        minLength: 3,
        autoFocus: true,
        open: function () { $(this).removeClass("ui-autocomplete-loading"); },
        source: function (request, response) {
            $(".ErrorMessage").text("");
            $(".ViewBagErrorMessage").text("");
            $.ajax({
                url: '@Url.Action("SearchUserList", "User")',
                type: 'POST',
                dataType: 'json',
                data: { ShiftID: $("#ShiftId").val(), DepartmentId: $("#DepartmentID").val(), UserName: request.term, recCount: 5 },
                success: function (data) {
                    if (data != null) {
                        response($.map(data, function (item) {
                            return {
                                label: item.FirstName + " <" + (item.UserContactEmail.Detail != "" ? item.UserContactEmail.Detail : "No Email Address") + ">",
                                value: item.FirstName,
                                encryptedID: item.EncryptedID,
                                id: item.ID
                            };
                        }))
                    }
                    else {
                        $("#UserName").removeClass("ui-autocomplete-loading");
                        $(".ErrorMessage").text("No Users Found");
                        $(".ViewBagErrorMessage").text("");
                    }
                }
            })
        },
        select: function (event, ui) {
            var label = ui.item.label;
            label = label.substring(0, label.indexOf(' <'));
            var value = ui.item.encryptedID;
            var id = ui.item.id;

            this.value = "";
            this.focus();
            $("#UserName").val(label);
            //$("#UserName").attr('readonly', true);
            //window.location = "ViewDetail?key=" + value;
            return false;
        },
        change: function (event, ui) {
            var referenceValue = $(this).val();
            var matches = false;

            $(".ui-autocomplete li").each(function () {
                if ($(this).text() == referenceValue) {
                    matches = true;
                    return false;
                }
            });

            //if (!matches) {
            //    this.value = "";
            //    this.focus();
            //    this.style.border = "solid 1px red";
            //    $(this).removeClass("ui-autocomplete-loading");
            //    $(".ErrorMessage").text("No Customer Found");
            //    $(".ViewBagErrorMessage").text("");
            //}
            //else {
            //    this.style.border = "";
            //}
        },
        messages: {
            noResults: "", results: ""
        }
    })
</script>
