@model HRM.Core.Model.VMEMPPayslipDetail
@{
                /**/

                Layout = "/Views/Shared/_LayoutWOSidebar.cshtml";
                ViewBag.Title = "HRMS - Payslip Detail";
}
<div class="page-box content-box mrg25B">
    <h3 class="content-box-header bg-blue text-left mrg25B"><i class="glyph-icon icon-table"></i>Payslip Detail</h3>
    @using (Html.BeginForm("PayslipDetail", "Payroll", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "PayslipDetailForm", @class = "form-horizontal customclass" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        if (Model != null)
        {
            <div class="form-group"><div class="col-sm-11"></div><div class="col-sm-1" style="float: right;"><a class="printlink" href="javascript:;" onclick="Print();"><img src="/assets/images/printer.png" style="width: 20px;" />&nbsp;Print</a></div></div>
            <table class="table tblpayslip attendancereport" id="gridtbl">
                <tbody>
                    @for (int i = 0; i < Model.VMEmpPayslipDetailUserList.Count; i++)
                    {
                        <tr>
                            <td style="width: 25%">Name:</td>
                            <td>@Model.VMEmpPayslipDetailUserList[i].EmpName</td>
                        </tr>
                        <tr>
                            <td>Department:</td>
                            <td>@Model.VMEmpPayslipDetailUserList[i].DName</td>
                        </tr>
                        <tr>
                            <td>Designation:</td>
                            <td>@(Model.VMEmpPayslipDetailUserList[i].Designation == "" ? "N/A" : Model.VMEmpPayslipDetailUserList[i].Designation)</td>
                        </tr>
                        <tr>

                            <td>Payroll Cycle:</td>
                            <td>@(Model.VMEmpPayslipDetailUserList[i].PayrollCycleIsActive == false ? "Test - " + Model.VMEmpPayslipDetailUserList[i].PayrollCycleName : Model.VMEmpPayslipDetailUserList[i].PayrollCycleName)</td>
                        </tr>
                    }
                </tbody>
            </table>
            <br />
            <table class="table tblpayslipadd datatable" id="gridAddition">
                <thead>
                    <tr class="header">
                        <th style="width: 70%">Particulars</th>
                        <th style="width: 30%">Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.VMEmpPayslipDetailUserList.Count; i++)
                    {
                        for (int j = 0; j < Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList.Count; j++)
                        {
                            <tr>
                                <td>Salary</td>
                                <td class="add nmbr">@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].Salary</td>
                            </tr>
                        }
                    }
                    @for (int i = 0; i < Model.VMEmpPayslipDetailUserList.Count; i++)
                    {
                        for (int j = 0; j < Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList.Count; j++)
                        {
                            for (int k = 0; k < Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList.Count; k++)
                            {
                                if (Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].Amount > 0)
                                {
                                    <tr>
                                        <td> @Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollPolicyName </td>
                                        <td class="add nmbr">@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].Amount</td>
                                    </tr>
                                }
                            }
                        }
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td>Gross Salary</td>
                        <td><span id="GrossSalary" class="nmbr">0</span></td>
                    </tr>
                </tfoot>
            </table>
            <br />
            //Addition Start
            <table class="table tblpayslipadd datatable" id="gridDeduction">
                <thead>
                    <tr class="header">
                        <th style="width: 70%">Addition</th>
                        <th style="width: 30%">Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.VMEmpPayslipDetailUserList.Count; i++)
                    {
                        for (int j = 0; j < Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList.Count; j++)
                        {
                            for (int k = 0; k < Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList.Count; k++)
                            {
                                if (Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].Amount > 0)
                                {
                                    <tr>
                                        <td> @Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollPolicyName </td>
                                        <td class="adds nmbr">@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].Amount</td>
                                    </tr>
                                }
                            }
                        }
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td>Total Addition</td>
                        <td><span id="TotalAddition" class="nmbr">0</span></td>
                    </tr>
                </tfoot>
            </table>
            //Addition End
            <table class="table tblpayslipadd datatable" id="gridDeduction">
                <thead>
                    <tr class="header">
                        <th style="width: 70%">Deductions</th>
                        <th style="width: 30%">Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.VMEmpPayslipDetailUserList.Count; i++)
                    {
                        for (int j = 0; j < Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList.Count; j++)
                        {
                            for (int k = 0; k < Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList.Count; k++)
                            {
                                if (Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].Amount < 0)
                                {
                    <tr>
                        <td>@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollPolicyName Day(s)</td>
                        <td style="display:none" class="PayrollCycleId">@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].PayrollCycleId</td>
                        <td style="display:none" class="PayrollId">@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollId</td>
                        <td style="display:none" class="UserId">@Model.VMEmpPayslipDetailUserList[i].EmpId</td>
                        <td style="display:none" class="IsLate">@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollPolicyName</td>
                        <td style="display:none" class="IsEarly">@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollPolicyName</td>
                        @if (@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollVariableName != "Absent" && @Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollPolicyName == "Early")
                        {
                            <td class="ded nmbr">@Math.Abs(@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].Amount)&emsp;&emsp;&emsp;<a href="#" data-toggle="modal" data-target="#Early" id="classModal" class="EarlyTicket"> Apply Ticket</a></td>
                        }
                        else if (@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollVariableName != "Absent" && @Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollPolicyName == "Late")
                        {
                            <td class="ded nmbr">@Math.Abs(@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].Amount)&emsp;&emsp;&emsp;<a href="#" data-toggle="modal" data-target="#Late" id="classModal" class="LateTicket"> Apply Ticket</a></td>
                        }
                        else if (@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollVariableName != "Absent" && @Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollPolicyName != "Late" && @Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollPolicyName != "Early")
                        {
                            <td class="ded nmbr">@Math.Abs(@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].Amount)</td>
                        }
                        else if(@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].PayrollVariableName == "Absent")
                        {
                            <td class="ded nmbr">@Math.Abs(@Model.VMEmpPayslipDetailUserList[i].VMEmpPayslipDetailPayrollList[j].VMEmpPayslipDetailVariablesList[k].Amount)&emsp;&emsp;&emsp;<a href="#" data-toggle="modal" data-target="#Leave" id="classModal" class="CheckLeave">CheckLeave</a></td>
                        }
                    </tr>
                                }
                            }
                        }
                    }
               
                </tbody>
                <tfoot>
                    <tr>
                        <td>Total Deduction</td>
                        <td><span id="TotalDeductions" class="nmbr">0</span></td>
                    </tr>
                </tfoot>
            </table>
            <br />
            <table class="table tblpayslipadd datatable" id="gridtblNet">
                <tfoot>
                    <tr>
                        <td style="width: 70%">Net Salary<br /><span id="NetSalaryInWords"></span></td>
                        <td id="NetSalary" class="nmbr">@Model.VMEmpPayslipDetailUserList[0].VMEmpPayslipDetailPayrollList[0].NetSalary</td>
                    </tr>
                </tfoot>
            </table>
        }
    }

    <style>
        .modal {
            position: absolute;
            z-index: 1060;
        }
        /*.fade {
            opacity: 10 !important;
        }*/
        .modal-backdrop {
            z-index: 1040 !important;
            display: none;
        }

        .modal-content {
            margin: 2px auto;
            z-index: 1100 !important;
        }
    </style>
    @*Absent*@
    <div class="container">
        <br>
        <div class="modal fade" id="Leave">
            <div class="modal-dialog modal-lg modal-dialog-centered">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Absent</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <!-- Modal body -->
                    <div class="modal-body">
                        <table class="table table-striped" id="ModalTableLeave">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    </div>

                </div>
            </div>
        </div>
    </div>
    @*Early*@
    <div class="container">
        <br>
        <div class="modal fade" id="Early">
            <div class="modal-dialog modal-lg modal-dialog-centered">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Early</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <!-- Modal body -->
                    <div class="modal-body">
                        <table class="table  table-striped" id="ModalTableEarly">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Time In</th>
                                    <th>Time Out</th>
                                    <th>Shift Start</th>
                                    <th>Shift End</th>
                                    <th>OffDay</th>
                                    <th>Reason</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    </div>

                </div>
            </div>
        </div>
    </div>
    @*Late*@
    <div class="container">
        <br>
        <div class="modal fade" id="Late">
            <div class="modal-dialog modal-lg modal-dialog-centered">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Late</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <!-- Modal body -->
                    <div class="modal-body">
                        <table class="table  table-striped" id="ModalTableLate">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Time In</th>
                                    <th>Time Out</th>
                                    <th>Shift Start</th>
                                    <th>Shift End</th>
                                    <th>OffDay</th>
                                    <th>Reason</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <iframe name="print_frame" width="0" height="0" frameborder="0" src="about:blank"></iframe>
    <script>
        function addCommas(nStr) {
            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
            }
            return x1 + x2;
        }
        $(document).ready(function () {
            $(document).on("click", ".EarlyTicket", function () {
                var UserID = $(event.target).parent().closest('tr').children('.UserId').text();
                //Start Getting All the values from a table
                var data = {
                    PayrollCycleId: $(event.target).parent().closest('tr').children('.PayrollCycleId').text(),
                    PayrollId: $(event.target).parent().closest('tr').children('.PayrollId').text(),
                    UserId: $(event.target).parent().closest('tr').children('.UserId').text(),
                    IsEarly: $(event.target).parent().closest('tr').children('.IsEarly').text(),
                    IsLate: $(event.target).parent().closest('tr').children('.IsLate').text()
                };
                //End of Getting All the values from a table
                $.ajax({
                    type: 'POST',
                    url: "/Employee/PayslipVariableInformation",
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    success: function (response) {
                        const getObject = jQuery.parseJSON(response);
                        $("#ModalTableEarly > tbody").empty();
                        $.each(getObject, function (k, obj) {
                            //Date
                            const monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
                                "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                            let dateObj = new Date(obj['Date']);
                            let month = monthNames[dateObj.getMonth()];
                            let day = String(dateObj.getDate()).padStart(2, '0');
                            let year = dateObj.getFullYear();
                            let date = day + '-' + month + '-' + year;
                            //Start TimeIn
                            var ti = new Date(obj['TimeIn']);
                            var hours = ti.getHours();
                            var minutes = ti.getMinutes();
                            var ampm = hours >= 12 ? 'PM' : 'AM';
                            hours = hours % 12;
                            hours = hours ? hours : 12; // the hour '0' should be '12'
                            minutes = minutes < 10 ? '0' + minutes : minutes;
                            var TimeIn = hours + ':' + minutes + ' ' + ampm;
                            //Start TimeOut
                            var to = new Date(obj['TimeOutt']);
                            var hours = to.getHours();
                            var minutes = to.getMinutes();
                            var ampm = hours >= 12 ? 'PM' : 'AM';
                            hours = hours % 12;
                            hours = hours ? hours : 12; // the hour '0' should be '12'
                            minutes = minutes < 10 ? '0' + minutes : minutes;
                            var TimeOutt = hours + ':' + minutes + ' ' + ampm;
                            //Start ShiftTimeIn
                            var sti = new Date(obj['ShiftTimeIn']);
                            var hours = sti.getHours();
                            var minutes = sti.getMinutes();
                            var ampm = hours >= 12 ? 'PM' : 'AM';
                            hours = hours % 12;
                            hours = hours ? hours : 12; // the hour '0' should be '12'
                            minutes = minutes < 10 ? '0' + minutes : minutes;
                            var ShiftTimeIn = hours + ':' + minutes + ' ' + ampm;
                            //Start ShiftTimeOut
                            var sto = new Date(obj['ShiftTimeOut']);
                            var hours = sto.getHours();
                            var minutes = sto.getMinutes();
                            var ampm = hours >= 12 ? 'PM' : 'AM';
                            hours = hours % 12;
                            hours = hours ? hours : 12; // the hour '0' should be '12'
                            minutes = minutes < 10 ? '0' + minutes : minutes;
                            var ShiftTimeOut = hours + ':' + minutes + ' ' + ampm;
                            if (obj['IsOffDay'] == '0') {
                                var OffDay = 'No';
                            }
                            if (obj['IsOffDay'] == '1') {
                                var OffDay = 'Yes';
                            }
                            if (obj['AttendanceID'] == obj['TicketAttendanceID']) {
                                EarlyApplied = "<td name ='SentTicket' class='SentTicket' disabled='disabled'><input type = 'button' class='btn btn-info SentTicket' name = 'SentTicket' value='Applied' disabled='disabled'></input></td></tr>";
                            }
                            else {
                                EarlyApplied = "<td name ='SentEarlyTicket' class='SentEarlyTicket'><input type = 'button' class='btn btn-info SentEarlyTicket' name = 'SentEarlyTicket' value='Apply'></input></td></tr>";
                            }
                            //Start Append values in modal table
                            AppendTd = "<tr>";
                            AppendTd += "<td style='display: none' name ='AttendanceID' class='AttendanceID'>" + obj['AttendanceID'] + "</td>";
                            AppendTd += "<td style='display: none' name ='UserID' class='UserID'>" + UserID + "</td>";
                            AppendTd += "<td name ='Date' class='Date'>" + date + "</td>";
                            AppendTd += "<td name ='TimeIn' class='TimeIn'>" + TimeIn + "</td>";
                            AppendTd += "<td name ='TimeOutt' class='TimeOutt'>" + TimeOutt + "</td>";
                            AppendTd += "<td name ='ShiftTimeIn' class='ShiftTimeIn'>" + ShiftTimeIn + "</td>";
                            AppendTd += "<td name ='ShiftTimeOut' class='ShiftTimeOut'>" + ShiftTimeOut + "</td>";
                            AppendTd += "<td name ='IsOffDay' class='IsOffDay'>" + OffDay + "</td>";
                            AppendTd += "<td name ='Reason' class='Reason'><textarea name = 'Reason' class='Reason' ></textarea ></td>";
                            AppendTd += EarlyApplied;
                            $('#ModalTableEarly tbody').append(AppendTd);
                        });
                    },
                    failure: function (err) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Something went wrong!',
                            text: 'Try again later'
                        })
                    }
                });
            });
            $(document).on("click", ".SentEarlyTicket", function (e) {
                e.stopPropagation();
                var EarlyReason = "";
                $(this).closest('tr').find(".Reason").each(function () {
                    EarlyReason = this.value;
                });
                if (EarlyReason == "") {
                    Swal.fire('Please give the reason before applying the ticket') //if reason inputt type is empty
                }
                else {
                    $(this).text("Applied");
                    //Start Getting All the values from a table
                    var modalData = {
                        AttendanceID: $(event.target).parent().closest('tr').children('.AttendanceID').text(),
                        IsOffDay: $(event.target).parent().closest('tr').children('.IsOffDay').text(),
                        UserID: $(event.target).parent().closest('tr').children('.UserID').text(),
                        Date: $(event.target).parent().closest('tr').children('.Date').text(),
                        TimeIn: $(event.target).parent().closest('tr').children('.TimeIn').text(),
                        TimeOutt: $(event.target).parent().closest('tr').children('.TimeOutt').text(),
                        ShiftTimeIn: $(event.target).parent().closest('tr').children('.ShiftTimeIn').text(),
                        ShiftTimeOut: $(event.target).parent().closest('tr').children('.ShiftTimeOut').text(),
                        reason: EarlyReason
                    };
                    $.ajax({
                        type: 'POST',
                        url: "/Employee/SentTicket",
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        data: JSON.stringify(modalData),
                        success: function (response) {

                            Swal.fire(
                                'Success!',
                                'Your Eary ticket has been sent',
                                'success'
                            )
                        },
                        failure: function (err) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Something went wrong!',
                                text: 'Try again later'
                            })
                        }
                    });
                }
            });

            //Start for Late
            $(document).on("click", ".LateTicket", function () {

                var UserID = $(event.target).parent().closest('tr').children('.UserId').text();
                //Start Getting All the values from a table
                var data = {
                    PayrollCycleId: $(event.target).parent().closest('tr').children('.PayrollCycleId').text(),
                    PayrollId: $(event.target).parent().closest('tr').children('.PayrollId').text(),
                    UserId: $(event.target).parent().closest('tr').children('.UserId').text(),
                    IsEarly: $(event.target).parent().closest('tr').children('.IsEarly').text(),
                    IsLate: $(event.target).parent().closest('tr').children('.IsLate').text()
                };
                //End of Getting All the values from a table
                $.ajax({
                    type: 'POST',
                    url: "/Employee/PayslipVariableInformation",
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    success: function (response) {
                        const getObject = jQuery.parseJSON(response);
                        $("#ModalTableLate > tbody").empty();
                        $.each(getObject, function (k, obj) {
                            //Date
                            const monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
                                "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                            let dateObj = new Date(obj['Date']);
                            let month = monthNames[dateObj.getMonth()];
                            let day = String(dateObj.getDate()).padStart(2, '0');
                            let year = dateObj.getFullYear();
                            let date = day + '-' + month + '-' + year;
                            //Start TimeIn
                            var ti = new Date(obj['TimeIn']);
                            var hours = ti.getHours();
                            var minutes = ti.getMinutes();
                            var ampm = hours >= 12 ? 'PM' : 'AM';
                            hours = hours % 12;
                            hours = hours ? hours : 12; // the hour '0' should be '12'
                            minutes = minutes < 10 ? '0' + minutes : minutes;
                            var TimeIn = hours + ':' + minutes + ' ' + ampm;
                            //Start TimeOut
                            var to = new Date(obj['TimeOutt']);
                            var hours = to.getHours();
                            var minutes = to.getMinutes();
                            var ampm = hours >= 12 ? 'PM' : 'AM';
                            hours = hours % 12;
                            hours = hours ? hours : 12; // the hour '0' should be '12'
                            minutes = minutes < 10 ? '0' + minutes : minutes;
                            var TimeOutt = hours + ':' + minutes + ' ' + ampm;
                            //Start ShiftTimeIn
                            var sti = new Date(obj['ShiftTimeIn']);
                            var hours = sti.getHours();
                            var minutes = sti.getMinutes();
                            var ampm = hours >= 12 ? 'PM' : 'AM';
                            hours = hours % 12;
                            hours = hours ? hours : 12; // the hour '0' should be '12'
                            minutes = minutes < 10 ? '0' + minutes : minutes;
                            var ShiftTimeIn = hours + ':' + minutes + ' ' + ampm;
                            //Start ShiftTimeOut
                            var sto = new Date(obj['ShiftTimeOut']);
                            var hours = sto.getHours();
                            var minutes = sto.getMinutes();
                            var ampm = hours >= 12 ? 'PM' : 'AM';
                            hours = hours % 12;
                            hours = hours ? hours : 12; // the hour '0' should be '12'
                            minutes = minutes < 10 ? '0' + minutes : minutes;
                            var ShiftTimeOut = hours + ':' + minutes + ' ' + ampm;
                            if (obj['IsOffDay'] == '0') {
                                var OffDay = 'No';
                            }
                            if (obj['IsOffDay'] == '1') {
                                var OffDay = 'Yes';
                            }
                            if (obj['AttendanceID'] == obj['TicketAttendanceID']) {
                                LateApplied = "<td name ='SentTicket' class='SentTicket' disabled='disabled'><input type = 'button' class='btn btn-info SentTicket' name = 'SentTicket' value='Applied' disabled='disabled'></input></td></tr>";
                            }
                            else {
                                LateApplied = "<td name ='SentLateTicket'  class='SentLateTicket'><input type = 'button' class='btn btn-info SentLateTicket' name = 'SentLateTicket' value='Apply'></input></td></tr>";
                            }
                            //Start Append values in modal table
                            AppendTd = "<tr>";
                            AppendTd += "<td style='display: none' name ='AttendanceID' class='AttendanceID'>" + obj['AttendanceID'] + "</td>";
                            AppendTd += "<td style='display: none' name ='UserID' class='UserID'>" + UserID + "</td>";
                            AppendTd += "<td name ='Date' class='Date'>" + date + "</td>";
                            AppendTd += "<td name ='TimeIn' class='TimeIn'>" + TimeIn + "</td>";
                            AppendTd += "<td name ='TimeOutt' class='TimeOutt'>" + TimeOutt + "</td>";
                            AppendTd += "<td name ='ShiftTimeIn' class='ShiftTimeIn'>" + ShiftTimeIn + "</td>";
                            AppendTd += "<td name ='ShiftTimeOut' class='ShiftTimeOut'>" + ShiftTimeOut + "</td>";
                            AppendTd += "<td name ='IsOffDay' class='IsOffDay'>" + OffDay + "</td>";
                            AppendTd += "<td name ='Reason' class='Reason'><textarea name = 'Reason' class='Reason' ></textarea ></td>";
                            AppendTd += LateApplied;
                            $('#ModalTableLate tbody').append(AppendTd);
                        });
                    },
                    failure: function (err) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Something went wrong!',
                            text: 'Try again later'
                        })
                    }
                });
            });

            $(document).on("click", ".SentLateTicket", function (e) {
                e.stopPropagation();
                var LateReason = "";
                //$(".SentEarlyTicket").click(function () {
                $(this).closest('tr').find(".Reason").each(function () {
                    LateReason = this.value;
                });
                if (LateReason == "") {
                    Swal.fire('Please give the reason before applying the ticket') //if reason inputt type is empty
                }
                else {
                    $(this).text("Applied");
                    //Start Getting All the values from a table
                    var modalData = {
                        AttendanceID: $(event.target).parent().closest('tr').children('.AttendanceID').text(),
                        IsOffDay: $(event.target).parent().closest('tr').children('.IsOffDay').text(),
                        UserID: $(event.target).parent().closest('tr').children('.UserID').text(),
                        Date: $(event.target).parent().closest('tr').children('.Date').text(),
                        TimeIn: $(event.target).parent().closest('tr').children('.TimeIn').text(),
                        TimeOutt: $(event.target).parent().closest('tr').children('.TimeOutt').text(),
                        ShiftTimeIn: $(event.target).parent().closest('tr').children('.ShiftTimeIn').text(),
                        ShiftTimeOut: $(event.target).parent().closest('tr').children('.ShiftTimeOut').text(),
                        reason: LateReason
                    };
                    $.ajax({
                        type: 'POST',
                        url: "/Employee/SentTicket",
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        data: JSON.stringify(modalData),
                        success: function (response) {
                            Swal.fire(
                                'Success!',
                                'Your Late Ticket has been sent',
                                'success'
                            )
                        },
                        failure: function (err) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Something went wrong!',
                                text: 'Try again later'
                            })
                        }
                    });
                }
            });
            //End for Late

            //Start for Absent
            $(document).on("click", ".CheckLeave", function () {
                var UserID = $(event.target).parent().closest('tr').children('.UserId').text();
                //Start Getting All the values from a table
                var data = {
                    PayrollCycleId: $(event.target).parent().closest('tr').children('.PayrollCycleId').text(),
                    PayrollId: $(event.target).parent().closest('tr').children('.PayrollId').text(),
                    UserId: $(event.target).parent().closest('tr').children('.UserId').text(),
                    IsEarly: $(event.target).parent().closest('tr').children('.IsEarly').text(),
                    IsLate: $(event.target).parent().closest('tr').children('.IsLate').text()
                };
                //End of Getting All the values from a table
                $.ajax({
                    type: 'POST',
                    url: "/Employee/PayslipAbsentInformation",
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    success: function (response) {    
                        const getAbsentInfo = jQuery.parseJSON(response);
                        console.log(getAbsentInfo);
                        $("#ModalTableLeave > tbody").empty();
                        $.each(getAbsentInfo, function (k, obj) {
                            const AbsentmonthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
                                "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                            let AbsentdateObj = new Date(obj['Date']);
                            let Absentmonth = AbsentmonthNames[AbsentdateObj.getMonth()];
                            let Absentday = String(AbsentdateObj.getDate()).padStart(2, '0');
                            let Absentyear = AbsentdateObj.getFullYear();
                            let Absentdate = Absentday + '-' + Absentmonth + '-' + Absentyear;
                            if (obj['Date'] == obj['LeaveAttendanceDate']) {
                                Leave = "<td name ='FillLeave'  class='FillLeave' disabled='disabled'><input type = 'button' class='btn btn-warning FillLeave' name = 'FillLeave' value='Leave Filled' disabled='disabled'></input></td></tr>";
                            }
                            else {
                                Leave = "<td name ='SentLeave'  class='SentLeave'><a href='/Employee/Leave?StartDate="+Absentdate+"&EndDate="+Absentdate+"'' target='_blank'><button type='button' class='btn btn-info'>Fill Leave</button></a></td></tr>";
                   
                            }
                            //Start Append values in modal table
                            AppendTd = "<tr>";
                            AppendTd += "<td style='display: none' name ='AttendanceID' class='AttendanceID'>" + obj['AttendanceID'] + "</td>";
                            AppendTd += "<td style='display: none' name ='UserID' class='UserID'>" + UserID + "</td>";
                            AppendTd += "<td name ='Date' class='Date'>" + Absentdate + "</td>";
                            AppendTd += Leave;
                            $('#ModalTableLeave tbody').append(AppendTd);
                        });
                    },
                    failure: function (err) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Something went wrong!',
                            text: 'Try again later'
                        })
                    }
                });
            });
            //$(document).on("click", ".SentEarlyTicket", function (e) {
            //    e.stopPropagation();
            //    var EarlyReason = "";
            //    //$(".SentEarlyTicket").click(function () {
            //    $(this).closest('tr').find(".Reason").each(function () {
            //        EarlyReason = this.value;
            //    });
            //    if (EarlyReason == "") {
            //        Swal.fire('Please give the reason before applying the ticket') //if reason inputt type is empty
            //    }
            //    else {
            //        $(this).text("Applied");
            //        //Start Getting All the values from a table
            //        var modalData = {
            //            AttendanceID: $(event.target).parent().closest('tr').children('.AttendanceID').text(),
            //            IsOffDay: $(event.target).parent().closest('tr').children('.IsOffDay').text(),
            //            UserID: $(event.target).parent().closest('tr').children('.UserID').text(),
            //            Date: $(event.target).parent().closest('tr').children('.Date').text(),
            //            TimeIn: $(event.target).parent().closest('tr').children('.TimeIn').text(),
            //            TimeOutt: $(event.target).parent().closest('tr').children('.TimeOutt').text(),
            //            ShiftTimeIn: $(event.target).parent().closest('tr').children('.ShiftTimeIn').text(),
            //            ShiftTimeOut: $(event.target).parent().closest('tr').children('.ShiftTimeOut').text(),
            //            reason: EarlyReason
            //        };
            //        $.ajax({
            //            type: 'POST',
            //            url: "/Employee/SentTicket",
            //            contentType: 'application/json; charset=utf-8',
            //            dataType: 'json',
            //            data: JSON.stringify(modalData),
            //            success: function (response) {

            //                Swal.fire(
            //                    'Success!',
            //                    'Your Eary ticket has been sent',
            //                    'success'
            //                )
            //            },
            //            failure: function (err) {
            //                Swal.fire({
            //                    icon: 'error',
            //                    title: 'Something went wrong!',
            //                    text: 'Try again later'
            //                })
            //            }
            //        });
            //    }
            //});
            //End For Absent
            var addition = 0, deduction = 0; adds = 0;
            $('.adds').each(function () {
                adds += parseFloat($(this).text());  // Or this.innerHTML, this.innerText
            });
            $('.add').each(function () {
                addition += parseFloat($(this).text());  // Or this.innerHTML, this.innerText
            });
            $('.ded').each(function () {
                deduction += parseFloat($(this).text());  // Or this.innerHTML, this.innerText
            });

            $('#GrossSalary').html(addition.toFixed(2));
            $('#TotalDeductions').html(deduction.toFixed(2));
            $('#TotalAddition').html(adds.toFixed(2));

            var netSalary = parseInt($('#NetSalary').html()).toFixed(0);

            $('#NetSalaryInWords').html(toWords(netSalary) + ' only');

            $('.nmbr').each(function () {
                $(this).html(addCommas($(this).html()));
            });

        });

        function Print() {

            var printElement = $(".page-box").clone();
            //printElement.find("h3").hide();
            printElement.find(".form-group").hide();
            printElement.find(".printlink").hide();
            printElement.find("a").each(function (e) { $(this).attr("href", "#"); });

            printDivCSS = new String('<link rel="stylesheet" type="text/css" href="/assets/helpers/helpers-all.css">');
            printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/elements/elements-all.css">';
            printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/icons/fontawesome/fontawesome.css">';
            printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/icons/linecons/linecons.css">';
            printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/snippets/snippets-all.css">';
            printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/applications/mailbox.css">';
            printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/themes/supina/layout.css">';
            printDivCSS += '<link id="layout-color" rel="stylesheet" type="text/css" href="/assets/themes/supina/default/layout-color.css">';
            printDivCSS += '<link id="framework-color" rel="stylesheet" type="text/css" href="/assets/themes/supina/default/framework-color.css">';
            printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/themes/supina/border-radius.css">';
            printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/helpers/colors.css">';
            printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/themes/supina/custom.css">';

            window.frames["print_frame"].document.body.innerHTML = printDivCSS + ' ' + printElement.html();
            window.frames["print_frame"].window.focus();
            setTimeout(function () {
                window.frames["print_frame"].window.print();
            }, 1000);
        }

        // Convert numbers to words
        // copyright 25th July 2006, by Stephen Chapman http://javascript.about.com
        // permission to use this Javascript on your web page is granted
        // provided that all of the code (including this copyright notice) is
        // used exactly as shown (you can change the numbering system if you wish)

        // American Numbering System
        var th = ['', 'thousand', 'million', 'billion', 'trillion'];
        // uncomment this line for English Number System
        // var th = ['','thousand','million', 'milliard','billion'];

        var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']; var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen']; var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];
        function toWords(s) { s = s.toString(); s = s.replace(/[\, ]/g, ''); if (s != parseFloat(s)) return 'not a number'; var x = s.indexOf('.'); if (x == -1) x = s.length; if (x > 15) return 'too big'; var n = s.split(''); var str = ''; var sk = 0; for (var i = 0; i < x; i++) { if ((x - i) % 3 == 2) { if (n[i] == '1') { str += tn[Number(n[i + 1])] + ' '; i++; sk = 1; } else if (n[i] != 0) { str += tw[n[i] - 2] + ' '; sk = 1; } } else if (n[i] != 0) { str += dg[n[i]] + ' '; if ((x - i) % 3 == 0) str += 'hundred '; sk = 1; } if ((x - i) % 3 == 1) { if (sk) str += th[(x - i - 1) / 3] + ' '; sk = 0; } } if (x != s.length) { var y = s.length; str += 'point '; for (var i = x + 1; i < y; i++) str += dg[n[i]] + ' '; } return str.replace(/\s+/g, ' '); }

    </script>

