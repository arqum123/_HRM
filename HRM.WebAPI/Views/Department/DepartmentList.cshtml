@model HRM.Core.Model.VMDepartmentModel
@{
    ViewBag.Title = "HRMS - View Departments List";
    WebGrid grid = new WebGrid(Model.DepartmentList, canSort: true, canPage: true, rowsPerPage: 10);//whenever rowsperpage will be changed, change it in script as well
}
<div class="page-box content-box mrg25B">
    <h3 class="content-box-header bg-blue text-left mrg25B"><i class="glyph-icon icon-table"></i>Departments List</h3>
    @using (Html.BeginForm("DepartmentList", "Department", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "DepartmentListForm", @class = "form-horizontal customclass" }))
    {
        int j = 0;
        <table class="table table-striped table-hover datatable">
            <thead>
                <tr>
                    <th>SNO</th>
                    <th>Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.DepartmentList.Count; i++)
                {
                    j = i + 1;
                    <tr>
                        <td>@j</td>

                        <td>      <a title="Click here to Edit Department" href="/Department?id=@Model.DepartmentList[i].Id">@Model.DepartmentList[i].Name</a></td>
                        @if (@Model.DepartmentList[i].Description == null || @Model.DepartmentList[i].Description == "")
                        {
                            <td>N/A</td>
                        }
                        else
                        {
                            <td>@Model.DepartmentList[i].Description</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
        @*@Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            if (Model.DepartmentList != null && Model.DepartmentList.Count > 0)
            {
            @grid.GetHtml(htmlAttributes: new { id = "gridtbl" },
            tableStyle: "table table-striped table-hover datatable",
            headerStyle: "header",
            alternatingRowStyle: "alternating-row",
            rowStyle: "row-style",
            columns:
                grid.Columns(
                    grid.Column("SNo", format: item => item.WebGrid.Rows.IndexOf(item) + 1),
                    grid.Column("Name", "Name", format: @<text><a title="Click here to Edit Department" href="/Department?id=@item.Id">@item.Name</a></text>),
                    grid.Column("Description", header: "Description", format: (item) => (item.Description != null && item.Description != "") ? item.Description : Html.Raw("N/A"))
                    )
            )*@
    if (ViewBag.TotalPages != null)
    {
        double TotalPages = ViewBag.TotalPages;
        if (TotalPages > 1)
        {
            <ul class="pagination">
                <li>@Html.ActionLink("First", "DepartmentList", new { Id = ViewBag.DepartmentID, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = 1 })</li>

                @if (ViewBag.PageNumber == 1)
                {
                    <li>@Html.ActionLink("Previous", "DepartmentList", new { Id = ViewBag.DepartmentID, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = ViewBag.PageNumber })</li>
                }
                else
                {
                    <li>@Html.ActionLink("Previous", "DepartmentList", new { Id = ViewBag.DepartmentID, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = ViewBag.PageNumber - 1 })</li>
                }

                @for (int i = 1; i <= TotalPages; i++)
                {


                    if (i == ViewBag.PageNumber)
                    {
                        <li class="active">@Html.ActionLink(i.ToString(), "DepartmentList", new { Id = ViewBag.DepartmentID, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })</li>
                    }
                    else
                    {
                        <li>@Html.ActionLink(i.ToString(), "DepartmentList", new { Id = ViewBag.DepartmentID, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = i.ToString() })</li>

                    }


                }
                @if (ViewBag.PageNumber == TotalPages)
                {
                    <li>@Html.ActionLink("Next", "DepartmentList", new { Id = ViewBag.DepartmentID, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = ViewBag.PageNumber })</li>
                }
                else
                {
                    <li>@Html.ActionLink("Next", "DepartmentList", new { Id = ViewBag.DepartmentID, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = ViewBag.PageNumber + 1 })</li>
                }
                <li>@Html.ActionLink("Last", "DepartmentList", new { Id = ViewBag.DepartmentID, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = TotalPages })</li>
            </ul>
            }
        }
    }
</div>
<script type="text/javascript">
$(document).ready(function () {
        var pagenmbr = 1;
        var rowsPerPage = 10;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1);
        if (hashes.indexOf('page') >= 0)
            pagenmbr = hashes.substring(hashes.indexOf('page') + 5);

        $('.datatable tbody tr').each(function () {
            var sno = $(this).find('td:first').html();
            $(this).find('td:first').html(((rowsPerPage * pagenmbr) - rowsPerPage) + parseInt(sno));
        });
});
    </script>