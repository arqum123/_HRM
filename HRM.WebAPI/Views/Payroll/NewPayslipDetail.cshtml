@model HRM.Core.Model.VMPayslipDetail
@{
    Layout = "/Views/Shared/_LayoutWOSidebar.cshtml";
    ViewBag.Title = "HRMS - Payslip Detail";
}
<div class="page-box content-box mrg25B">
    <h3 class="content-box-header bg-blue text-left mrg25B"><i class="glyph-icon icon-table"></i>Payslip Detail</h3>
    @using (Html.BeginForm("PayslipDetail", "Payroll", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "PayslipDetailForm", @class = "form-horizontal customclass" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        if (Model != null)
        {
            <div class="form-group"><div class="col-sm-11"></div><div class="col-sm-1" style="float: right;"><a class="printlink" href="javascript:;" onclick="Print();"><img src="/assets/images/printer.png" style="width: 20px;" />&nbsp;Print</a></div></div>
            <table class="table tblpayslip attendancereport" id="gridtbl">
                <tbody>
                    @for (int i = 0; i < Model.VMPayslipDetailUserList.Count; i++)
                    {
                        <tr>

                            <td style="width: 25%">Name:</td>
                            <td>@Model.VMPayslipDetailUserList[i].EmpName</td>
                        </tr>
                        <tr>
                            <td>Department:</td>
                            <td>@Model.VMPayslipDetailUserList[i].DName</td>
                        </tr>
                        <tr>
                            <td>Designation:</td>
                            <td>@(Model.VMPayslipDetailUserList[i].Designation == "" ? "N/A" : Model.VMPayslipDetailUserList[i].Designation)</td>
                        </tr>
                        <tr>

                            <td>Payroll Cycle:</td>
                            <td>@(Model.VMPayslipDetailUserList[i].PayrollCycleIsActive == false ? "Test - " + Model.VMPayslipDetailUserList[i].PayrollCycleName : Model.VMPayslipDetailUserList[i].PayrollCycleName)</td>
                        </tr>
                    }
                </tbody>
            </table>
            <br />
            <table class="table tblpayslipadd datatable" id="gridAddition">
                <thead>
                    <tr class="header">
                        <th style="width: 70%">Particulars</th>
                        <th style="width: 30%">Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.VMPayslipDetailUserList.Count; i++)
                    {
                        for (int j = 0; j < Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList.Count; j++)
                        {
                            <tr>
                                <td>Salary</td>
                                <td class="salary add nmbr">@Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].Salary</td>
                            </tr>
                        }
                    }
                    @for (int i = 0; i < Model.VMPayslipDetailUserList.Count; i++)
                    {
                        for (int j = 0; j < Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList.Count; j++)
                        {
                            for (int k = 0; k < Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].VMPayslipDetailVariablesList.Count; k++)
                            {
                                if (Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].VMPayslipDetailVariablesList[k].Amount > 0)
                                {

                                    <tr>

                                        <td> @Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].VMPayslipDetailVariablesList[k].PayrollPolicyName </td>
                                        <td class="salaryadd add nmbr">@Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].VMPayslipDetailVariablesList[k].Amount</td>
                                    </tr>
                                }
                            }
                        }
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td>Gross Salary</td>
                        <td><span id="GrossSalary" class="nmbr">0</span></td>
                    </tr>
                </tfoot>
            </table>
            <br />
            //Addition Start
            <table class="table tblpayslipadd datatable" id="gridDeduction">
                <thead>
                    <tr class="header">
                        <th style="width: 70%">Additions</th>
                        <th style="width: 30%">Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.VMPayslipDetailUserList.Count; i++)
                    {
                        for (int j = 0; j < Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList.Count; j++)
                        {
                            for (int k = 0; k < Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].VMPayslipDetailVariablesList.Count; k++)
                            {
                                if (Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].VMPayslipDetailVariablesList[k].Amount > 0)
                                {
                                    <tr>

                                        <td> @Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].VMPayslipDetailVariablesList[k].PayrollPolicyName </td>
                                        <td class="totalAdd add nmbr">@Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].VMPayslipDetailVariablesList[k].Amount</td>
                                    </tr>
                                }
                            }
                        }
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td>Total Addition</td>
                        <td><span id="TotalAddition" class="nmbr">0</span></td>
                    </tr>
                </tfoot>
            </table>
            //Addition End
            <table class="table tblpayslipadd datatable" id="gridDeduction">
                <thead>
                    <tr class="header">
                        <th style="width: 70%">Deductions</th>
                        <th style="width: 30%">Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.VMPayslipDetailUserList.Count; i++)
                    {
                        for (int j = 0; j < Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList.Count; j++)
                        {
                            for (int k = 0; k < Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].VMPayslipDetailVariablesList.Count; k++)
                            {
                                if (Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].VMPayslipDetailVariablesList[k].Amount < 0)
                                {
                    <tr>
                        <td>
                            @Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].VMPayslipDetailVariablesList[k].PayrollPolicyName 
                        </td>
                        <td class="ded nmbr">@Math.Abs(@Model.VMPayslipDetailUserList[i].VMPayslipDetailPayrollList[j].VMPayslipDetailVariablesList[k].Amount)</td>
                    </tr>
                                }
                            }
                        }
                    }

                </tbody>
                <tfoot>
                    <tr>
                        <td>Total Deductions</td>
                        <td><span id="TotalDeductions" class="nmbr">0</span></td>
                    </tr>
                </tfoot>
            </table>
            <br />
            <table class="table tblpayslipadd datatable" id="gridtblNet">
                <tfoot>
                    <tr>
                        <td style="width: 70%">Net Salary<br /><span id="NetSalaryInWords"></span></td>
                        <td id="NetSalary" class="nmbr">@Model.VMPayslipDetailUserList[0].VMPayslipDetailPayrollList[0].NetSalary</td>
                    </tr>
                </tfoot>
            </table>
        }
    }
</div>

<style>
    .bs-example {
        margin: 20px;
    }
</style>

<iframe name="print_frame" width="0" height="0" frameborder="0" src="about:blank"></iframe>
<script>
    function addCommas(nStr) {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }
    $(document).ready(function () {
        $(".modal-dialog").css("width", "80%");
        var addition = 0, deduction = 0, totalAddition = 0, salary, OtherSalary;
        $('.add').each(function () {
            addition += parseFloat($(this).text());  // Or this.innerHTML, this.innerText
            //alert(addition);
        });
        $('.salary').each(function () {
            salary = parseFloat($(this).text());  // Or this.innerHTML, this.innerText
        });
        $('.OtherSalary').each(function () {
            OtherSalary += parseFloat($(this).text());  // Or this.innerHTML, this.innerText
            //alert(OtherSalary);
        });
        $('.totalAdd').each(function () {
            totalAddition += parseFloat($(this).text());  // Or this.innerHTML, this.innerText
        });
        $('.ded').each(function () {
            deduction += parseFloat($(this).text());  // Or this.innerHTML, this.innerText
        });
        //var total = salary + OtherSalary;
        $('#GrossSalary').html(addition.toFixed(2));
        $('#TotalDeductions').html(deduction.toFixed(2));
        $('#TotalAddition').html(totalAddition.toFixed(2));
        var netSalary = parseInt($('#NetSalary').html()).toFixed(0);
        $('#NetSalaryInWords').html(toWords(netSalary) + ' only');

        $('.nmbr').each(function () {
            $(this).html(addCommas($(this).html()));
        });
    });
    function Print() {
        var printElement = $(".page-box").clone();
        //printElement.find("h3").hide();
        printElement.find(".form-group").hide();
        printElement.find(".printlink").hide();
        printElement.find("a").each(function (e) { $(this).attr("href", "#"); });

        printDivCSS = new String('<link rel="stylesheet" type="text/css" href="/assets/helpers/helpers-all.css">');
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/elements/elements-all.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/icons/fontawesome/fontawesome.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/icons/linecons/linecons.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/snippets/snippets-all.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/applications/mailbox.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/themes/supina/layout.css">';
        printDivCSS += '<link id="layout-color" rel="stylesheet" type="text/css" href="/assets/themes/supina/default/layout-color.css">';
        printDivCSS += '<link id="framework-color" rel="stylesheet" type="text/css" href="/assets/themes/supina/default/framework-color.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/themes/supina/border-radius.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/helpers/colors.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/themes/supina/custom.css">';

        window.frames["print_frame"].document.body.innerHTML = printDivCSS + ' ' + printElement.html();
        window.frames["print_frame"].window.focus();
        setTimeout(function () {
            window.frames["print_frame"].window.print();
        }, 1000);
    }
    // Convert numbers to words
    // copyright 25th July 2006, by Stephen Chapman http://javascript.about.com
    // permission to use this Javascript on your web page is granted
    // provided that all of the code (including this copyright notice) is
    // used exactly as shown (you can change the numbering system if you wish)

    // American Numbering System
    var th = ['', 'thousand', 'million', 'billion', 'trillion'];
    // uncomment this line for English Number System
    //var th = ['','thousand','million', 'milliard','billion'];
    var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']; var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen']; var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];
    function toWords(s) { s = s.toString(); s = s.replace(/[\, ]/g, ''); if (s != parseFloat(s)) return 'not a number'; var x = s.indexOf('.'); if (x == -1) x = s.length; if (x > 15) return 'too big'; var n = s.split(''); var str = ''; var sk = 0; for (var i = 0; i < x; i++) { if ((x - i) % 3 == 2) { if (n[i] == '1') { str += tn[Number(n[i + 1])] + ' '; i++; sk = 1; } else if (n[i] != 0) { str += tw[n[i] - 2] + ' '; sk = 1; } } else if (n[i] != 0) { str += dg[n[i]] + ' '; if ((x - i) % 3 == 0) str += 'hundred '; sk = 1; } if ((x - i) % 3 == 1) { if (sk) str += th[(x - i - 1) / 3] + ' '; sk = 0; } } if (x != s.length) { var y = s.length; str += 'point '; for (var i = x + 1; i < y; i++) str += dg[n[i]] + ' '; } return str.replace(/\s+/g, ' '); }

</script>
