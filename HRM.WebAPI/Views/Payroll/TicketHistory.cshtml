@model HRM.Core.Model.VMTicketFilter
@{
    ViewBag.Title = "Ticket History";
}
<div class="page-box content-box mrg25B">
    <h3 class="content-box-header bg-blue text-left mrg25B">
        <i class="glyph-icon icon-table"></i>Ticket History
        <div class="col-sm-3" style="float: right;">
            <a href="javascript:;" onclick="Print(1);" style="float: right">
                <img src="/assets/images/printer.png" style="width: 20px" />&nbsp;Print
            </a>
        </div>
    </h3>
    @using (Html.BeginForm("TicketHistory", "Payroll", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "DailyAttendanceListForm", @class = "form-horizontal customclass" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <link rel="stylesheet" type="text/css" href="/assets/widgets/datepicker/datepicker.css">

        <div class="form-group">
            <label for="UserName" class="col-sm-4 control-label lblforinput">User Name</label>
            <div class="col-sm-6">

                @Html.TextBoxFor(m => m.UserName, new { maxlength = "200", @class = "form-control", placeholder = "User Name" })
            </div>
        </div>
        @*<div class="form-group">
            <label for="UserID" class="col-sm-4 control-label lblforinput">Employee: </label>
            <div class="col-sm-6">
                @Html.DropDownListFor(m => m.UserId, ViewBag.User as SelectList, "All Employee", new { @class = "form-control", @id = "User" })
            </div>
        </div>*@

        <div class="form-group">
            <label for="DepartmentID" class="col-sm-4 control-label lblforinput">Department: </label>
            <div class="col-sm-6">
                @Html.DropDownListFor(m => m.DepartmentId, ViewBag.Department as SelectList, "All Department", new { @class = "form-control", @id = "Department" })
            </div>
        </div>
        <div class="form-group">
            <label for="StartDate" class="col-sm-4 control-label lblforinput">From: </label>
            <div class="col-sm-6">
                @Html.TextBoxFor(m => m.StartDate, new { maxlength = "20", @class = "bootstrap-datepicker form-control startdate", @readonly = "readonly" })

                @*<a href="javascript:void();" class="floatright settoday">Set Day</a>*@
            </div>
        </div>

        <div class="form-group">
            <label for="StartDate" class="col-sm-4 control-label lblforinput">To: </label>
            <div class="col-sm-6">
                @Html.TextBoxFor(m => m.EndDate, new { maxlength = "20", @class = "bootstrap-datepicker form-control enddate", @readonly = "readonly" })

                @*<a href="javascript:void();" class="floatright settoday">Set Day</a>*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-5"></div>
            <div class="col-sm-2">
                <button type="submit" class="btn btn-block btn-success" id="submit">Search</button>
            </div>
            <div class="col-sm-5"></div>
        </div>

        <div class="form-group">
            <div class="col-sm-5"></div>
            <div class="col-sm-12">
                <div class="text-danger" id="error"></div>
            </div>
            <div class="col-sm-5"></div>
        </div>
    }

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>  @*//If required then we will open it(the function to validate dropdown)*@
    <script>
        //$(function () {
        //    $('#submit').click(function () { //Validation for empty department or username
        //        if ($('#User').val() === '' && $('#Department').val() === '') {
        //            $("#error").html('Please Select Employee or Department atleast.').fadeOut(7000);
        //            $("#DailyAttendanceListForm").submit(function (e) {

        //                e.preventDefault();
        //                $('#DailyAttendanceListForm').unbind('submit').submit(3000);

        //            });

        //        }
        //    });
        //});

    </script>

    @if (Model.VMTicketHistoryList != null && Model.VMTicketHistoryList.Count > 0)
    {

        <table class="table table-striped table-hover datatable" id="myTable">
            <thead>
                <tr>
                    <th>SNO</th>
                    <th>Employee</th>
                    <th>Department</th>
                    <th>@Html.ActionLink("Date", "TicketHistory", new { StartDate = Model.StartDate, EndDate = Model.EndDate, UserName = Model.UserName, DepartmentId = Model.DepartmentId, SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "Date", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })</th>
                    <th>Off Day</th>
                    <th>TimeIn</th>
                    <th>TimeOut</th>
                    <th>Shift TimeIn</th>
                    <th>Shift TimeOut</th>
                    <th>Reason</th>
                    <th>Comments</th>
                    <th>Status</th>
                </tr>
            </thead>
            @{
                int sno = 0;
            }

            @for (int i = 0; i < Model.VMTicketHistoryList.Count; i++)
            {
                <tbody>
                    <tr>
                        @{ sno++;}
                        <td>@sno </td>
                        <td>@Model.VMTicketHistoryList[i].EmpName</td>
                        <td>@Model.VMTicketHistoryList[i].DepartmentName</td>
                        <td>@Model.VMTicketHistoryList[i].AttendanceDate.ToString("dd-MMM-yyyy")</td>
                        @if (@Model.VMTicketHistoryList[i].OffDay == true)
                        {
                            <td>Yes</td>
                        }
                        else
                        {
                            <td>No</td>
                        }
                        @if (@Model.VMTicketHistoryList[i].TimeIn == DateTime.MinValue)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td>@Model.VMTicketHistoryList[i].TimeIn.ToString("hh:mm tt")</td>
                        }
                        @if (@Model.VMTicketHistoryList[i].TimeOut == DateTime.MinValue)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td>@Model.VMTicketHistoryList[i].TimeOut.ToString("hh:mm tt")</td>
                        }
                        @if (@Model.VMTicketHistoryList[i].ShiftTimeIn == DateTime.MinValue)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td>@Model.VMTicketHistoryList[i].ShiftTimeIn.ToString("hh:mm tt")</td>
                        }
                        @if (@Model.VMTicketHistoryList[i].ShiftTimeOut == DateTime.MinValue)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td>@Model.VMTicketHistoryList[i].ShiftTimeOut.ToString("hh:mm tt")</td>
                        }
                        @if (@Model.VMTicketHistoryList[i].Reason == null || Model.VMTicketHistoryList[i].Reason == "")
                        {
                            <td>N/A</td>
                        }
                        else
                        {
                            <td>@Model.VMTicketHistoryList[i].Reason</td>
                        }
                        @if (@Model.VMTicketHistoryList[i].Comments == null || Model.VMTicketHistoryList[i].Comments == "")
                        {
                            <td>N/A</td>
                        }
                        else
                        {
                            <td>@Model.VMTicketHistoryList[i].Comments</td>
                        }

                        @if (@Model.VMTicketHistoryList[i].IsApproved == false)
                        {
                            <td>Reject  @Model.VMTicketHistoryList[i].ManagerName</td>
                        }
                        else if (@Model.VMTicketHistoryList[i].IsReject == false)
                        {
                            <td>Approved  @Model.VMTicketHistoryList[i].ManagerName</td>
                        }
                        else if (@Model.VMTicketHistoryList[i].IsApproved == false && Model.VMTicketHistoryList[i].IsReject == false)
                        {
                            <td>Pending</td>
                        }
                        else
                        {
                            <td>-</td>
                        }

                    </tr>
                </tbody>

            }

        </table>
                            if (ViewBag.TotalPages != null)
                            {
                                double TotalPages = ViewBag.TotalPages;
                                if (TotalPages > 1)
                                {
            <ul class="pagination">
                <li>@Html.ActionLink("First", "TicketHistory", new { StartDate = Model.StartDate, EndDate = Model.EndDate, UserName = Model.UserName, DepartmentId = Model.DepartmentId, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = 1 })</li>

                @if (ViewBag.PageNumber == 1)
                {
                    <li>@Html.ActionLink("Previous", "TicketHistory", new { StartDate = Model.StartDate, EndDate = Model.EndDate, UserName = Model.UserName, DepartmentId = Model.DepartmentId, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = ViewBag.PageNumber })</li>
                }
                else
                {
                    <li>@Html.ActionLink("Previous", "TicketHistory", new { StartDate = Model.StartDate, EndDate = Model.EndDate, UserName = Model.UserName, DepartmentId = Model.DepartmentId, PSortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = ViewBag.PageNumber - 1 })</li>
                }

                @for (int i = 1; i <= TotalPages; i++)
                {


                    if (i == ViewBag.PageNumber)
                    {
                        <li class="active">@Html.ActionLink(i.ToString(), "TicketHistory", new { StartDate = Model.StartDate, EndDate = Model.EndDate, UserName = Model.UserName, DepartmentId = Model.DepartmentId, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })</li>
                    }
                    else
                    {
                        <li>@Html.ActionLink(i.ToString(), "TicketHistory", new { StartDate = Model.StartDate, EndDate = Model.EndDate, UserName = Model.UserName, DepartmentId = Model.DepartmentId, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = i.ToString() })</li>
                    }


                }
                @if (ViewBag.PageNumber == TotalPages)
                {
                    <li>@Html.ActionLink("Next", "TicketHistory", new { StartDate = Model.StartDate, EndDate = Model.EndDate, UserName = Model.UserName, DepartmentId = Model.DepartmentId, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = ViewBag.PageNumber })</li>
                }
                else
                {
                    <li>@Html.ActionLink("Next", "TicketHistory", new { StartDate = Model.StartDate, EndDate = Model.EndDate, UserName = Model.UserName, DepartmentId = Model.DepartmentId, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = ViewBag.PageNumber + 1 })</li>
                }
                <li>@Html.ActionLink("Last", "TicketHistory", new { StartDate = Model.StartDate, EndDate = Model.EndDate, UserName = Model.UserName, DepartmentId = Model.DepartmentId, SortOrder = ViewBag.SortOrder, SortBy = "Date", PageNumber = TotalPages })</li>
            </ul>
                                    }
                                }
                            }
</div>
<iframe name="print_frame" width="0" height="0" frameborder="0" src="about:blank"></iframe>

<script>
    function PopupCenter(url, title, w, h) {
        // Fixes dual-screen position                         Most browsers      Firefox
        var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;
        var dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;

        var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
        var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;

        var left = ((width / 2) - (w / 2)) + dualScreenLeft;
        var top = ((height / 2) - (h / 2)) + dualScreenTop;
        var newWindow = window.open(url, title, 'scrollbars=no, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);

        // Puts focus on the newWindow
        if (window.focus) {
            newWindow.focus();
        }
    }
    var links = $('a[href*=page], a[href*=sort]'), form = $('form');
    links.click(function () {
        form.attr("action", this.href);
        $(this).attr("href", "javascript:");
        form.submit();
    });
    $(document).ready(function () {
        var startdate = new Date($('.startdate').val())
        $('.startdate').val((startdate.getMonth() + 1) + '/' + startdate.getDate() + '/' + startdate.getFullYear());

        $("option[value='-1']").remove();
    });

    $('.settoday').click(function () {
        var startdate = new Date()
        $('.enddate').val((startdate.getMonth() + 1) + '/' + startdate.getDate() + '/' + startdate.getFullYear());
    });
    function Print(img) {
        debugger;
        //var printElement = $(".page-box").clone();
        var printElement = $("body").clone();
        printElement.find("h3>div").hide();
        printElement.find(".form-group .tblLegends").hide();
        printElement.find("form").hide(); e();
        printElement.find("#page-sidebar").hide();

        printElement.find("a").each(function (e) { $(this).attr("href", "#"); });
        if (img == 0)
        printElement.find("#page-header").hid
            printElement.find("img").hide();

        $(printElement[0]).prepend("<span class='test'>Print Date: @DateTime.Now.ToString() </span> | " +
        "<span class='test'>Date: @Model.StartDate.ToString("MM/dd/yy") </span> | " +
        "<span class='test'>Dept: @(ViewBag.BranchName!=null? ViewBag.BranchName.ToString() :"Any") > @(ViewBag.DeptName!=null? ViewBag.DeptName.ToString():"Any") </span>" +
        "<span class='test'>Cat: @(ViewBag.SalaryTypeName!=null? ViewBag.SalaryTypeName.ToString() :"Any") | Shift: @(ViewBag.ShiftName!=null? ViewBag.ShiftName.ToString():"Any") </span>" +
        "");

        printDivCSS = new String('<link rel="stylesheet" type="text/css" href="/assets/helpers/helpers-all.css">');
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/elements/elements-all.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/icons/fontawesome/fontawesome.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/icons/linecons/linecons.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/snippets/snippets-all.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/applications/mailbox.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/themes/supina/layout.css">';
        printDivCSS += '<link id="layout-color" rel="stylesheet" type="text/css" href="/assets/themes/supina/default/layout-color.css">';
        printDivCSS += '<link id="framework-color" rel="stylesheet" type="text/css" href="/assets/themes/supina/default/framework-color.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/themes/supina/border-radius.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/helpers/colors.css">';
        printDivCSS += '<link rel="stylesheet" type="text/css" href="/assets/themes/supina/custom.css">';

        window.frames["print_frame"].document.body.innerHTML = printDivCSS + ' ' + printElement.html();
        window.frames["print_frame"].window.focus();
        $(window.frames["print_frame"].document.body).css("height", parseInt($("#sb-site").css("height").replace("px")) + 4000 + "px");
        setTimeout(function () {
            window.frames["print_frame"].window.print();
        }, 1000);
    }
</script>


<script>
    $(document).ready(function () {
        $('#myTable').DataTable();
    });
</script>
